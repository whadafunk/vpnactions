# This is a basic workflow to help you get started with Actions

name: vpn-wireguard

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  wg-connect:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: setup wireguard
        uses: egor-tensin/setup-wireguard@v1
        with:
          # Endpoint in the HOST:PORT format
          endpoint: 89.46.160.238:51820
          # Public key of the endpoint
          endpoint_public_key: YK6dqDLzKaO32oAPXHrGZwEgR3x0hDonq3DcRVj9ITY=
          # Comma-separated list of IP addresses
          ips: 10.165.206.11/24
          # Comma-separated list of netmasks
          allowed_ips: 0.0.0.0/0
          # Private key
          private_key: ANZ/5fsnzPQhXMT+jM0w2E2nfyAhtscYpA5WBPBxjHo=
          # Preshared key
          preshared_key:
          # Useful for NAT traversal
          keepalive: 25

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          ip -br a
          ping -c 2 10.165.206.1
          ping -c 2 10.148.0.8
